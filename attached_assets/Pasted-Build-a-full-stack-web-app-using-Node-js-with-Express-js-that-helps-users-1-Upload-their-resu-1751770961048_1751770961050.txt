Build a full-stack web app using **Node.js with Express.js** that helps users:

1. Upload their resume
2. Get role suggestions from Gemini based on their resume
3. Select roles they're interested in
4. Get redirected to job board search URLs (like Google Jobs or Indeed)
5. Paste a job description (JD)
6. Let Gemini analyze resume vs JD
7. Generate:
   - Resume optimization suggestions
   - A tailored cover letter
8. Show watermarked previews (resume + cover letter)
9. Gate download behind Stripe payment

---

## üîß Stack

- Node.js with Express.js backend
- EJS or React for templating (Replit-friendly)
- HTML + CSS (responsive and professional)
- Optional JS for preview handling (disable copy)
- Use Gemini REST API via `fetch` or `node-fetch`
- Stripe for payments (test mode)
- Free Replit-compatible libraries only

---

## üé® UI Theme

- Clean and professional job application theme
- Blue and white color palette
- Font: Inter or Open Sans
- Components:
   - Resume upload box
   - Text input area for JD
   - Suggested job roles section
   - Generated job search URLs
   - Resume + Cover Letter preview area with watermark
   - Stripe payment section

Watermark text: ‚ÄúDEMO ‚Äì Pay to Download‚Äù  
Disable right-click, copy-paste, and text selection in preview using CSS/JS.

---

## üì¶ Pages

1. `/` ‚Äì Homepage
   - Resume upload (.pdf, .docx)
   - Extract plain text using `pdf-parse` and `mammoth`
   - Call Gemini API to suggest roles and detect location
   - Let user confirm or choose role types

2. `/job-links` ‚Äì After role selection
   - Show search URL links for job boards (based on roles + location)
   - Open links in new tab using query parameters

3. `/optimize` ‚Äì User pastes JD here
   - Send resume + JD to Gemini
   - Get back:
     - Skills gap analysis
     - Resume improvement suggestions
     - Tailored cover letter

4. `/preview` ‚Äì Show HTML preview
   - Optimized resume
   - Custom cover letter
   - Add watermark + disable copy

5. `/pay` ‚Äì Stripe Checkout
   - Process payment securely
   - After payment success, redirect to `/download`

6. `/download` ‚Äì Allow PDF downloads without watermark

---

## ü§ñ GEMINI PROMPTS

### 1. Suggest Job Roles

```txt
You are a career coach. Analyze the following resume and list:
1. Top 5 job roles the candidate is qualified for
2. Likely or preferred job location (if mentioned)
3. Main skill clusters (e.g., marketing, data analysis, full-stack)

Resume:
"""{resume_text}"""
```

---

### 2. Compare Resume vs JD

```txt
You're a resume expert. Compare this resume to the job description below:
1. Highlight missing or weak skills
2. Suggest new bullet points to improve match
3. Rewrite key sections if needed

Resume:
"""{resume_text}"""

Job Description:
"""{jd_text}"""
```

---

### 3. Cover Letter Generator

```txt
Write a professional cover letter for this job. Make it personalized, 250-300 words.

Resume:
"""{resume_text}"""

Job Description:
"""{jd_text}"""
```

---

## üßæ Payment Integration (Stripe)

- Use `stripe` Node.js SDK
- Add test keys via `.env`
- Block download until payment
- After payment, remove watermark and unlock final resume + cover letter download

---

## üß™ PDF Generation & Watermark

- Use `pdf-lib`, `html-pdf`, or `puppeteer` to generate PDFs
- For previews, render HTML with watermark and disable selection
- Prevent copy-paste using JS and CSS

---

## üõ† Node.js Libraries

- `express`
- `multer` (for file upload)
- `pdf-parse`, `mammoth` (text extraction)
- `dotenv`
- `node-fetch` (for Gemini API)
- `stripe`
- `pdf-lib` or `puppeteer` (PDF generation)

---

## ‚öôÔ∏è Additional Notes

- No job scraping ‚Äì just build search URLs
- All tools and APIs must run for free on Replit
- Gemini API key passed securely via `.env`

---

Start by setting up Express routes, static files, views, and basic file upload.
Then integrate Gemini APIs and payment logic step-by-step.
